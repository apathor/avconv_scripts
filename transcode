#!/bin/bash
# transcode FORMAT SOURCE_DIR TARGET_DIR
# Transcode source directory of audio files to a new format into target directory.
# transcode Â© Mike Lalumiere 2017

function transcode {
    # usage string
    local usage="USAGE: transcode FORMAT SOURCE_DIR TARGET_DIR"
    # requirements
    if ! type avconv &>/dev/null; then
        printf "No avconv available!\n" >&2
        return 1
    fi
    if ! type find   &>/dev/null; then
        printf "No find available?\n" >&2
        return 1
    fi
    # audio format argument
    local fmt="$1"
    if [ -z "$fmt" ]; then
        printf "%s\nFormat argument is required!\n" "$usage" >&2
        return 1
    fi
    # TODO - validate format argument using 'avconv -formats'
    # source directory argument
    local src="$2"
    if ! [ -n "$src" ]; then
        printf "%s\nSource directory argument is required!\n" "$usage" >&2
        return 1
    fi
    if ! [ -d "$src" ]; then
        printf "%s\nSource %s is not a directory!\n" "$usage" "$src" >&2
        return 1
    fi
    src="${src%%/}"
    # destination directory argument
    local dst="$3"
    if ! [ -n "$dst" ]; then
        printf "%s\nTarget directory argument is required!\n" "$usage" >&2
        return 1
    fi
    if ! [ -d "$dst" ]; then
        printf "%s\nTarget %s is not a directory!\n" "$usage" "$dst" >&2
        return 1
    fi
    dst="${dst%%/}"
    # search for track files
    # TODO - generate this regex from 'avconv -formats'
    readarray -t tracks < <(find "$src" -type f -iregex ".*\(flac\|mp3\|mp4\|ogg\|wav\)$")
    # record failures
    local err=0
    # for each track
    local num inp seg ext run
    for ((num=0; num < "${#tracks[@]}"; num++)); do
        # using the name and extension of the file
        inp="${tracks[$num]}"
        ext="${inp##*.}"
        # generate the output file name with target extension
        seg="${inp##$src/}"
        out="$dst/${seg%%\.$ext}.$fmt"
        # write out progress
        printf "Track %d / %d - %s " "$(( num + 1 ))" "${#tracks[@]}" "${inp##$src/}" >&2
        # maybe setup output directory
        if ! [ -d "${out%/*}" ] && ! mkdir -p "${out%/*}"; then
            printf "Could not make directory.\n" >&2
            continue
        fi
        # skip if the output file already exists
        if [ -f "$out" ]; then
            printf "Exists\n"  >&2
            echo "$out"
            continue
        fi
        # copy if the input is already output format
        if [ "${ext,,}" == "${fmt,,}" ]; then
            printf "Copied\n" >&2
            cp "$inp" "$out"
            echo "$out"
            continue
        fi
        # transcode the input file into output format
        run=$(avconv -n -i "$inp" "$out" 2>&1)
        if [ "$?" -eq 0 ]; then
            printf "Transcoded\n" >&2
            echo "$out"
        else
            printf "Failed\n%s\n" "$run">&2
            let err++
        fi
    done
    # check
    if [ "$err" -gt 0 ]; then
        printf "Failed to transcode %d files." >&2
        return 3
    fi
    return 0
}

# run it unless sourced
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then transcode "$@"; fi
